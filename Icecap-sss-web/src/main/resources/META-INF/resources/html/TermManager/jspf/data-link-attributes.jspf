<aui:fieldset-group markupView="lexicon">
	<aui:fieldset label="data-link-attrinutes">
		<aui:container>
			<aui:row>
				<aui:col md= "6">
					<aui:select name="DataLink_refDatabases" label="reference-databses" helpMessage="data-link-reference-databases-help" required="true"></aui:select>
				</aui:col>
			</aui:row>
			<aui:fieldset label="manage-ref-databases">
				<aui:row>
					<aui:col md="6">
						<aui:input name="DataLink_databaseName" label="database-name"></aui:input>
					</aui:col>
					<aui:col md="2">
						<aui:input name="DataLink_databaseVersion" label="database-version"></aui:input>
					</aui:col>
				</aui:row>
				<aui:button-row>
					<aui:button name="DataLink_addRefDatabase" value="add-ref-database"></aui:button>
					<aui:button name="DataLink_updateRefDatabase" value="update-ref-database"></aui:button>
					<aui:button name="DataLink_deleteRefDatabase" value="delete-ref-database"></aui:button>
				</aui:button-row>
			</aui:fieldset>
		</aui:container>
	</aui:fieldset>
</aui:fieldset-group>
<%
%>

<script>
(function (){
	var refDatabases = [];
	var selectedDatabase;
	var dirty;
	
	var getDatabaseOptionValue = function( database ){
		return database.name+'_'+database.version;	
	}
	
	var getDatabaseOptionText = function( database ){
		return database.name+' '+database.version;	
	}

	var getDatabase = function(){
		var database = {};
		database.name = $('#<portlet:namespace/>DataLink_databaseName').val();
		database.version = $('#<portlet:namespace/>DataLink_databaseVersion').val();
		
		return database;	
	}
	
	var setDatabase = function( database){
		$('#<portlet:namespace/>DataLink_databaseName').val( database.name );
		$('#<portlet:namespace/>DataLink_databaseVersion').val( database.version );
	}
	
	var updateOption = function( $option, value, text ){
		$option.attr('value',value);
		$option.text( text );
	}
	
	$('#<portlet:namespace/>DataLink_addRefDatabase').click( function(){
		var database = getDatabase();
		
		refDatabases.push( database );
		//console.log( <portlet:namespace/>listItems );
		
		var optionValue = getDatabaseOptionValue(database);
		$('#<portlet:namespace/>DataLink_refDatabases').append(
				'<option value="' + optionValue + '">' +
				database.name+' '+database.version + '</option>');
		$('#<portlet:namespace/>DataLink_refDatabases').val( optionValue);
		selectedDatabase = database;
	});
	
	$('#<portlet:namespace/>DataLink_refDatabases').change( function(){

		var selectedValue = $('#<portlet:namespace/>DataLink_refDatabases').val();
		
		if( !selectedValue ){
			return;
		}
		else{
			refDatabases.forEach( function(database){
				
				if( getDatabaseOptionValue(database) === selectedValue ){
					selectedDatabase = database;
					setDatabase( database );
				}
			});
		}
	});
	
	$('#<portlet:namespace/>DataLink_updateRefDatabase').click( function(){
		var changedDatabase = getDatabase();
		console.log('changedDatabase ... ', changedDatabase);
		
		var $selectedOption = $('#<portlet:namespace/>DataLink_refDatabases option:selected');
		
		updateOption( 
				$selectedOption, 
				getDatabaseOptionValue(changedDatabase),
				getDatabaseOptionText(changedDatabase));
		
		refDatabases.forEach( function(database){
			console.log('Option Value: '+getDatabaseOptionValue(database));
			console.log('Changed Option Value: '+getDatabaseOptionValue(changedDatabase));
			if( getDatabaseOptionValue(database) ===
				 		getDatabaseOptionValue(selectedDatabase) ){
				database.name = changedDatabase.name;
				database.version = changedDatabase.version;
				selectedDatabase = database;
			}
		});
		
		console.log( 'Updated refDatabases.... ', refDatabases );
	});
	
	$('#<portlet:namespace/>DataLink_deleteRefDatabase').click( function(){
		$('#<portlet:namespace/>DataLink_refDatabases option').remove('option:selected');
		
		var selectedValue = $('#<portlet:namespace/>DataLink_refDatabases').val();
		
			if( !selectedValue ){
				refDatabases = [];
				setDatabase({name:'', version:''});
			}
			else{
				for( var i=0; i< refDatabases.length; i++){
					if( refDatabases[i].value === 
							getDatabaseOptionValue(selectedValue) ){
						SSS.Util.removeArrayElement( refDatabases, i );
						break;
					}
				}
			}
		
		$('#<portlet:namespace/>DataLink_refDatabases').trigger('change');
	});
	
}());
</script>